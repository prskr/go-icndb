{
  "openapi": "3.0.1",
  "info": {
    "title": "icndb",
    "description": "ICNDB sample API for ITB",
    "version": "0.0.1"
  },
  "servers": [
    {
      "url": "/"
    }
  ],
  "paths": {
    "/api/joke/{id}": {
      "get": {
        "tags": [
          "jokes"
        ],
        "summary": "Get the joke with the specified id",
        "operationId": "Get joke by id",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Joke ID",
            "required": true,
            "style": "simple",
            "explode": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "name": "firstName",
            "in": "query",
            "description": "Name to replace Chuck with in Joke",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Name to replace Norris with in Joke",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Ok",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactResponse"
                }
              }
            }
          },
          "404": {
            "description": "Not found",
            "content": {}
          }
        }
      }
    },
    "/api/jokes/random": {
      "get": {
        "tags": [
          "jokes"
        ],
        "summary": "Get a random joke",
        "operationId": "getRandomJoke",
        "parameters": [
          {
            "name": "firstName",
            "in": "query",
            "description": "Name to replace Chuck with in Joke",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "lastName",
            "in": "query",
            "description": "Name to replace Norris with in Joke",
            "required": false,
            "style": "form",
            "explode": true,
            "schema": {
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/FactResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/jokes/count": {
      "get": {
        "tags": [
          "jokes"
        ],
        "summary": "Get the count of the available jokes",
        "operationId": "getJokesCount",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CountResponse"
                }
              }
            }
          }
        }
      }
    },
    "/metrics": {
      "get": {
        "tags": [
          "observability"
        ],
        "summary": "Get metrics in a Prometheus compatible format",
        "operationId": "prometheusMetrics",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {}
            }
          }
        }
      }
    },
    "/health": {
      "get": {
        "tags": [
          "observability"
        ],
        "summary": "Check the health state of the service",
        "operationId": "getHealth",
        "responses": {
          "200": {
            "description": "Service is healthy",
            "content": {}
          },
          "500": {
            "description": "Service is not healty",
            "content": {}
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "CountResponse": {
        "required": [
          "count"
        ],
        "type": "object",
        "properties": {
          "count": {
            "type": "integer"
          }
        }
      },
      "FactResponse": {
        "required": [
          "categories",
          "joke"
        ],
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "joke": {
            "type": "string"
          },
          "categories": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        }
      }
    }
  }
}